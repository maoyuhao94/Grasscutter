// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlantFlowerSetFlowerWishReq.proto

public final class PlantFlowerSetFlowerWishReqOuterClass {
  private PlantFlowerSetFlowerWishReqOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PlantFlowerSetFlowerWishReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlantFlowerSetFlowerWishReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
     */
    int getFlowerNumMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
     */
    boolean containsFlowerNumMap(
        int key);
    /**
     * Use {@link #getFlowerNumMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getFlowerNumMap();
    /**
     * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getFlowerNumMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
     */

    int getFlowerNumMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
     */

    int getFlowerNumMapOrThrow(
        int key);

    /**
     * <code>uint32 scheduleId = 4;</code>
     * @return The scheduleId.
     */
    int getScheduleId();
  }
  /**
   * Protobuf type {@code PlantFlowerSetFlowerWishReq}
   */
  public static final class PlantFlowerSetFlowerWishReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:PlantFlowerSetFlowerWishReq)
      PlantFlowerSetFlowerWishReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PlantFlowerSetFlowerWishReq.newBuilder() to construct.
    private PlantFlowerSetFlowerWishReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PlantFlowerSetFlowerWishReq() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PlantFlowerSetFlowerWishReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PlantFlowerSetFlowerWishReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 32: {

              scheduleId_ = input.readUInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                flowerNumMap_ = com.google.protobuf.MapField.newMapField(
                    FlowerNumMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              flowerNumMap__ = input.readMessage(
                  FlowerNumMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              flowerNumMap_.getMutableMap().put(
                  flowerNumMap__.getKey(), flowerNumMap__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PlantFlowerSetFlowerWishReqOuterClass.internal_static_PlantFlowerSetFlowerWishReq_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetFlowerNumMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PlantFlowerSetFlowerWishReqOuterClass.internal_static_PlantFlowerSetFlowerWishReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq.class, PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq.Builder.class);
    }

    /**
     * Protobuf enum {@code PlantFlowerSetFlowerWishReq.GDDPAFLKDFJ}
     */
    public enum GDDPAFLKDFJ
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0, 0),
      /**
       * <code>PEPPOHPHJOJ = 8573;</code>
       */
      PEPPOHPHJOJ(1, 8573),
      /**
       * <code>NNBKOLMPOEA = 1;</code>
       */
      NNBKOLMPOEA(3, 1),
      UNRECOGNIZED(-1, -1),
      ;

      /**
       * <code>DCDNILFDFLB = 0;</code>
       */
      public static final GDDPAFLKDFJ DCDNILFDFLB = NONE;
      /**
       * <code>EAJIABGAOCI = 1;</code>
       */
      public static final GDDPAFLKDFJ EAJIABGAOCI = NNBKOLMPOEA;
      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>PEPPOHPHJOJ = 8573;</code>
       */
      public static final int PEPPOHPHJOJ_VALUE = 8573;
      /**
       * <code>DCDNILFDFLB = 0;</code>
       */
      public static final int DCDNILFDFLB_VALUE = 0;
      /**
       * <code>NNBKOLMPOEA = 1;</code>
       */
      public static final int NNBKOLMPOEA_VALUE = 1;
      /**
       * <code>EAJIABGAOCI = 1;</code>
       */
      public static final int EAJIABGAOCI_VALUE = 1;


      public final int getNumber() {
        if (index == -1) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static GDDPAFLKDFJ valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static GDDPAFLKDFJ forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 8573: return PEPPOHPHJOJ;
          case 1: return NNBKOLMPOEA;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<GDDPAFLKDFJ>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          GDDPAFLKDFJ> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<GDDPAFLKDFJ>() {
              public GDDPAFLKDFJ findValueByNumber(int number) {
                return GDDPAFLKDFJ.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (index == -1) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq.getDescriptor().getEnumTypes().get(0);
      }

      private static final GDDPAFLKDFJ[] VALUES = getStaticValuesArray();
      private static GDDPAFLKDFJ[] getStaticValuesArray() {
        return new GDDPAFLKDFJ[] {
          NONE, PEPPOHPHJOJ, DCDNILFDFLB, NNBKOLMPOEA, EAJIABGAOCI, 
        };
      }
      public static GDDPAFLKDFJ valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private GDDPAFLKDFJ(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:PlantFlowerSetFlowerWishReq.GDDPAFLKDFJ)
    }

    public static final int FLOWERNUMMAP_FIELD_NUMBER = 10;
    private static final class FlowerNumMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  PlantFlowerSetFlowerWishReqOuterClass.internal_static_PlantFlowerSetFlowerWishReq_FlowerNumMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> flowerNumMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetFlowerNumMap() {
      if (flowerNumMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FlowerNumMapDefaultEntryHolder.defaultEntry);
      }
      return flowerNumMap_;
    }

    public int getFlowerNumMapCount() {
      return internalGetFlowerNumMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
     */

    @java.lang.Override
    public boolean containsFlowerNumMap(
        int key) {
      
      return internalGetFlowerNumMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFlowerNumMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getFlowerNumMap() {
      return getFlowerNumMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getFlowerNumMapMap() {
      return internalGetFlowerNumMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
     */
    @java.lang.Override

    public int getFlowerNumMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetFlowerNumMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
     */
    @java.lang.Override

    public int getFlowerNumMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetFlowerNumMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SCHEDULEID_FIELD_NUMBER = 4;
    private int scheduleId_;
    /**
     * <code>uint32 scheduleId = 4;</code>
     * @return The scheduleId.
     */
    @java.lang.Override
    public int getScheduleId() {
      return scheduleId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (scheduleId_ != 0) {
        output.writeUInt32(4, scheduleId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetFlowerNumMap(),
          FlowerNumMapDefaultEntryHolder.defaultEntry,
          10);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (scheduleId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, scheduleId_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetFlowerNumMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        flowerNumMap__ = FlowerNumMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, flowerNumMap__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq)) {
        return super.equals(obj);
      }
      PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq other = (PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq) obj;

      if (!internalGetFlowerNumMap().equals(
          other.internalGetFlowerNumMap())) return false;
      if (getScheduleId()
          != other.getScheduleId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetFlowerNumMap().getMap().isEmpty()) {
        hash = (37 * hash) + FLOWERNUMMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFlowerNumMap().hashCode();
      }
      hash = (37 * hash) + SCHEDULEID_FIELD_NUMBER;
      hash = (53 * hash) + getScheduleId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlantFlowerSetFlowerWishReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlantFlowerSetFlowerWishReq)
        PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PlantFlowerSetFlowerWishReqOuterClass.internal_static_PlantFlowerSetFlowerWishReq_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetFlowerNumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetMutableFlowerNumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PlantFlowerSetFlowerWishReqOuterClass.internal_static_PlantFlowerSetFlowerWishReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq.class, PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq.Builder.class);
      }

      // Construct using PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableFlowerNumMap().clear();
        scheduleId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PlantFlowerSetFlowerWishReqOuterClass.internal_static_PlantFlowerSetFlowerWishReq_descriptor;
      }

      @java.lang.Override
      public PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq getDefaultInstanceForType() {
        return PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq.getDefaultInstance();
      }

      @java.lang.Override
      public PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq build() {
        PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq buildPartial() {
        PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq result = new PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq(this);
        int from_bitField0_ = bitField0_;
        result.flowerNumMap_ = internalGetFlowerNumMap();
        result.flowerNumMap_.makeImmutable();
        result.scheduleId_ = scheduleId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq) {
          return mergeFrom((PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq other) {
        if (other == PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq.getDefaultInstance()) return this;
        internalGetMutableFlowerNumMap().mergeFrom(
            other.internalGetFlowerNumMap());
        if (other.getScheduleId() != 0) {
          setScheduleId(other.getScheduleId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> flowerNumMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetFlowerNumMap() {
        if (flowerNumMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FlowerNumMapDefaultEntryHolder.defaultEntry);
        }
        return flowerNumMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableFlowerNumMap() {
        onChanged();;
        if (flowerNumMap_ == null) {
          flowerNumMap_ = com.google.protobuf.MapField.newMapField(
              FlowerNumMapDefaultEntryHolder.defaultEntry);
        }
        if (!flowerNumMap_.isMutable()) {
          flowerNumMap_ = flowerNumMap_.copy();
        }
        return flowerNumMap_;
      }

      public int getFlowerNumMapCount() {
        return internalGetFlowerNumMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
       */

      @java.lang.Override
      public boolean containsFlowerNumMap(
          int key) {
        
        return internalGetFlowerNumMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFlowerNumMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getFlowerNumMap() {
        return getFlowerNumMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getFlowerNumMapMap() {
        return internalGetFlowerNumMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
       */
      @java.lang.Override

      public int getFlowerNumMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetFlowerNumMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
       */
      @java.lang.Override

      public int getFlowerNumMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetFlowerNumMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFlowerNumMap() {
        internalGetMutableFlowerNumMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
       */

      public Builder removeFlowerNumMap(
          int key) {
        
        internalGetMutableFlowerNumMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableFlowerNumMap() {
        return internalGetMutableFlowerNumMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
       */
      public Builder putFlowerNumMap(
          int key,
          int value) {
        
        
        internalGetMutableFlowerNumMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; flowerNumMap = 10;</code>
       */

      public Builder putAllFlowerNumMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableFlowerNumMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int scheduleId_ ;
      /**
       * <code>uint32 scheduleId = 4;</code>
       * @return The scheduleId.
       */
      @java.lang.Override
      public int getScheduleId() {
        return scheduleId_;
      }
      /**
       * <code>uint32 scheduleId = 4;</code>
       * @param value The scheduleId to set.
       * @return This builder for chaining.
       */
      public Builder setScheduleId(int value) {
        
        scheduleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 scheduleId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearScheduleId() {
        
        scheduleId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:PlantFlowerSetFlowerWishReq)
    }

    // @@protoc_insertion_point(class_scope:PlantFlowerSetFlowerWishReq)
    private static final PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq();
    }

    public static PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PlantFlowerSetFlowerWishReq>
        PARSER = new com.google.protobuf.AbstractParser<PlantFlowerSetFlowerWishReq>() {
      @java.lang.Override
      public PlantFlowerSetFlowerWishReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlantFlowerSetFlowerWishReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PlantFlowerSetFlowerWishReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PlantFlowerSetFlowerWishReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public PlantFlowerSetFlowerWishReqOuterClass.PlantFlowerSetFlowerWishReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlantFlowerSetFlowerWishReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlantFlowerSetFlowerWishReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlantFlowerSetFlowerWishReq_FlowerNumMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PlantFlowerSetFlowerWishReq_FlowerNumMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!PlantFlowerSetFlowerWishReq.proto\"\216\002\n\033" +
      "PlantFlowerSetFlowerWishReq\022D\n\014flowerNum" +
      "Map\030\n \003(\0132..PlantFlowerSetFlowerWishReq." +
      "FlowerNumMapEntry\022\022\n\nscheduleId\030\004 \001(\r\0323\n" +
      "\021FlowerNumMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value" +
      "\030\002 \001(\r:\0028\001\"`\n\013GDDPAFLKDFJ\022\010\n\004NONE\020\000\022\020\n\013P" +
      "EPPOHPHJOJ\020\375B\022\017\n\013DCDNILFDFLB\020\000\022\017\n\013NNBKOL" +
      "MPOEA\020\001\022\017\n\013EAJIABGAOCI\020\001\032\002\020\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_PlantFlowerSetFlowerWishReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PlantFlowerSetFlowerWishReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlantFlowerSetFlowerWishReq_descriptor,
        new java.lang.String[] { "FlowerNumMap", "ScheduleId", });
    internal_static_PlantFlowerSetFlowerWishReq_FlowerNumMapEntry_descriptor =
      internal_static_PlantFlowerSetFlowerWishReq_descriptor.getNestedTypes().get(0);
    internal_static_PlantFlowerSetFlowerWishReq_FlowerNumMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PlantFlowerSetFlowerWishReq_FlowerNumMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
